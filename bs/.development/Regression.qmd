---
title: "Regression: maximum likelihood by hand"
output: html_document
---

# Maximum likelihood estimation

We calculate for each entry of the response variable the probability that this value
is taken from a distribution with specific parameters. For example we can calculate the
probability that a value $y_i$ is taken from a poisson distribution with a specific mean $\lambda$.
This calculation is in R done via $dpois(y_i, lambda)$. Afterwards the values are logaritmized and summed up.
This sum is called log-likelihood. The goal is to maximize this sum.


```{r Data, include = TRUE}
data(InsectSprays)
summary(InsectSprays)
head(InsectSprays)
predictors <- InsectSprays$spray
m <- data.frame(letters = toupper(letters[1:7]), values = 1:7)
predictors <- m[predictors, "values"]
response <- InsectSprays$count
ll <- function(params) {
  sum(
    dpois(
      InsectSprays$count,
      lambda = exp(params[1] + params[2]*predictors), log = TRUE
    )
  )
}
op <- optim(par = c(1, 0.1), fn = ll, control = list(fnscale = -1), hessian = TRUE)
op
# Standard errors of the parameters
sqrt(diag(solve(-op$hessian)))
# z values of the parameters
z_values <- op$par / sqrt(diag(solve(-op$hessian)))
z_values
# calculate critical value of the t distribution. -2 because two parameters are optimized
critical_values <- qt(0.05,
    df = length(response) - 2,
    lower.tail = FALSE
  ) # Significant as the critical value is smaller than the t values
critical_values
# p values
2 * (1 - pnorm(abs(z_values)))
# Anova
# Null model
null_ll <- function(params) {
  sum(dpois(InsectSprays$count, lambda = exp(params[1]), log = TRUE))
}
op_null <- optim(par = c(1), fn = null_ll, control = list(fnscale = -1), hessian = TRUE)
null_loglik <- -op_null$value  # Negative log-likelihood of the null model
# Full model
full_loglik <- -op$value  # Negative log-likelihood of the full model
# LRT statistic
lr_stat <- 2 * (null_loglik - full_loglik)
p_value_lr <- 1 - pchisq(lr_stat, 1) # df = 1
p_value_lr

m <- glm(response ~ predictors, family = poisson)
m
summary(m)
anova(m, test = "Chisq")
```

